% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plsFactors.R
\name{compute_npls_factors}
\alias{compute_npls_factors}
\title{Compute NPLS Factors with Core Arrays}
\usage{
compute_npls_factors(X, Y, ncomp, tol = 1e-16, max_iter = 10000)
}
\arguments{
\item{X}{A 3D array (n × p × k) where \code{n} = samples, \code{p} = variables,
\code{k} = time/slices.}

\item{Y}{A response matrix (n × q) for classical NPLS-DA, or a 3D array
(n × q × k) for regression class-2.}

\item{ncomp}{Integer. Number of components to extract (2–10).}

\item{tol}{Convergence tolerance for the inner iterative loop. Default: 1e-16.}

\item{max_iter}{Maximum number of iterations for convergence. Default: 10000.}
}
\value{
A list with:
\itemize{
\item \code{FactorsX}: list with Mode1 (scores \code{Tt}), Mode2 (variable loadings \code{WsupraJ}),
Mode3 (time loadings \code{WsupraK})
\item \code{FactorsY}: list with Y factors if \code{Y} is 3D (Mode1 \code{U}, Mode2 \code{QsupraJ},
Mode3 \code{QsupraK}); \code{NULL} otherwise
\item \code{B}: regression coefficient matrix
\item \code{G}: core array (3D, \code{ncomp × ncomp × ncomp})
  \item \code{Gu}: list of per-component core matrices (as in the original)
}
}
\description{
Computes NPLS factors and core arrays \code{G} and \code{Gu} following
the original NPLSDAmod algorithm, with handling of the classical
and regression class-2 modes and consistent labeling.
}
