% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tuningNPLSDA.R
\name{ncomp_elbow_nplsda}
\alias{ncomp_elbow_nplsda}
\title{NPLS-DA elbow analysis: cumulative Q2 logic}
\usage{
ncomp_elbow_nplsda(X, Y, max_ncomp = NULL, reps = 1, seed = 123)
}
\arguments{
\item{X}{A 3D array of shape n x p x k (subjects x variables x time).}

\item{Y}{A matrix n x q or a 3D array n x q x k.}

\item{max_ncomp}{Integer upper bound for components. If \code{NULL},
uses \code{min(10, n-1, p)}.}

\item{reps}{Integer, number of CV repetitions (default 1). When \code{reps > 1},
the function reports standard errors of cumulative Q2 across repetitions.}

\item{seed}{Integer or \code{NULL}. If provided, controls fold randomization
across repetitions (\code{seed + r - 1}).}
}
\value{
An object of class \code{ncomp_elbow} containing:
\itemize{
\item \code{table}: a \code{data.frame} with columns
\code{comp}, \code{Q2_inc}, \code{Q2_cum}, \code{gain_cum}, \code{Q2_cum_se}
\item \code{call}: a list with the effective analysis parameters
}
\itemize{
\item \code{X} is unfolded to an \code{n x (p*k)} matrix.
\item \code{Y} is unfolded to an \code{n x q prime} matrix if 3D, or coerced to matrix if already 2D.
}
For each repetition, a single \code{pls_reg(Xmat, Ymat, ncomp = Hmax, cv = TRUE)}
run is used to extract incremental and cumulative Q2 up to H components.
}
\description{
NPLS-DA elbow analysis: cumulative Q2 logic
}
\examples{
\dontrun{
set.seed(1)
X <- array(rnorm(50*20*3), c(50, 20, 3))
Y <- matrix(rnorm(50*2), 50, 2)
res <- ncomp_elbow_nplsda(X, Y, max_ncomp = 8, reps = 1)
print(res)
plot(res)
head(res$table)
}

}
